plugins {
    id 'scala'
    // Katrix: We apply these to get pretty build script
    id 'java'
    id 'java-library'
    id 'eclipse'
    id 'com.gtnewhorizons.retrofuturagradle' version '1.4.1'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}


version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
        // Azul covers the most platforms for Java 8 toolchains, crucially including MacOS arm64
        vendor.set(org.gradle.jvm.toolchain.JvmVendorSpec.AZUL)
    }
    // Generate sources and javadocs jars when building and publishing
    withSourcesJar()
    // withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}


minecraft {
    mcVersion.set('1.12.2')

    // MCP Mappings
    mcpMappingChannel = 'snapshot'
    mcpMappingVersion = '20171003'
}

if (project.use_access_transformer.toBoolean()) {
    for (File at : sourceSets.getByName("main").resources.files) {
        if (at.name.toLowerCase().endsWith("_at.cfg")) {
            tasks.deobfuscateMergedJarToSrg.accessTransformerFiles.from(at)
            tasks.srgifyBinpatchedJar.accessTransformerFiles.from(at)
        }
    }
}


repositories {
    maven {
        // RetroFuturaGradle
        name 'GTNH Maven'
        url 'https://nexus.gtnewhorizons.com/repository/public/'
        allowInsecureProtocol = true
        mavenContent {
            includeGroup 'com.gtnewhorizons'
            includeGroup 'com.gtnewhorizons.retrofuturagradle'
        }
    }

    mavenCentral() // Provide Scala
    mavenLocal() // Must be last for caching to work
}

dependencies {
    implementation "org.scala-lang:scala-library:2.11.4"

    // impl shaped Mirror here, may cause error
    implementation fileTree(dir:project.implementation_folder.toString(),includes:['*jar'])

}

tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    relocate 'shapeless', 'net.katsstuff.teamnightclipse.mirror.shade.shapeless'
}

tasks["build"].dependsOn(shadowJar)
